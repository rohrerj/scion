// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.3
// source: proto/colibri/v1/colibri.proto

package colibri

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReservationID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asid   uint64 `protobuf:"varint,1,opt,name=asid,proto3" json:"asid,omitempty"`
	Suffix []byte `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
}

func (x *ReservationID) Reset() {
	*x = ReservationID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationID) ProtoMessage() {}

func (x *ReservationID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationID.ProtoReflect.Descriptor instead.
func (*ReservationID) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{0}
}

func (x *ReservationID) GetAsid() uint64 {
	if x != nil {
		return x.Asid
	}
	return 0
}

func (x *ReservationID) GetSuffix() []byte {
	if x != nil {
		return x.Suffix
	}
	return nil
}

type PathEndProps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Local    bool `protobuf:"varint,1,opt,name=local,proto3" json:"local,omitempty"`
	Transfer bool `protobuf:"varint,2,opt,name=transfer,proto3" json:"transfer,omitempty"`
}

func (x *PathEndProps) Reset() {
	*x = PathEndProps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathEndProps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathEndProps) ProtoMessage() {}

func (x *PathEndProps) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathEndProps.ProtoReflect.Descriptor instead.
func (*PathEndProps) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{1}
}

func (x *PathEndProps) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

func (x *PathEndProps) GetTransfer() bool {
	if x != nil {
		return x.Transfer
	}
	return false
}

type AllocationBead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allocbw uint32 `protobuf:"varint,1,opt,name=allocbw,proto3" json:"allocbw,omitempty"`
	Maxbw   uint32 `protobuf:"varint,2,opt,name=maxbw,proto3" json:"maxbw,omitempty"`
}

func (x *AllocationBead) Reset() {
	*x = AllocationBead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocationBead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocationBead) ProtoMessage() {}

func (x *AllocationBead) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocationBead.ProtoReflect.Descriptor instead.
func (*AllocationBead) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{2}
}

func (x *AllocationBead) GetAllocbw() uint32 {
	if x != nil {
		return x.Allocbw
	}
	return 0
}

func (x *AllocationBead) GetMaxbw() uint32 {
	if x != nil {
		return x.Maxbw
	}
	return 0
}

type PathStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ia      uint64 `protobuf:"varint,1,opt,name=ia,proto3" json:"ia,omitempty"`
	Ingress uint32 `protobuf:"varint,2,opt,name=ingress,proto3" json:"ingress,omitempty"`
	Egress  uint32 `protobuf:"varint,3,opt,name=egress,proto3" json:"egress,omitempty"`
}

func (x *PathStep) Reset() {
	*x = PathStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathStep) ProtoMessage() {}

func (x *PathStep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathStep.ProtoReflect.Descriptor instead.
func (*PathStep) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{3}
}

func (x *PathStep) GetIa() uint64 {
	if x != nil {
		return x.Ia
	}
	return 0
}

func (x *PathStep) GetIngress() uint32 {
	if x != nil {
		return x.Ingress
	}
	return 0
}

func (x *PathStep) GetEgress() uint32 {
	if x != nil {
		return x.Egress
	}
	return 0
}

type Authenticators struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Macs [][]byte `protobuf:"bytes,1,rep,name=macs,proto3" json:"macs,omitempty"`
}

func (x *Authenticators) Reset() {
	*x = Authenticators{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Authenticators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authenticators) ProtoMessage() {}

func (x *Authenticators) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authenticators.ProtoReflect.Descriptor instead.
func (*Authenticators) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{4}
}

func (x *Authenticators) GetMacs() [][]byte {
	if x != nil {
		return x.Macs
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *ReservationID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Index          uint32          `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Timestamp      uint32          `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Authenticators *Authenticators `protobuf:"bytes,4,opt,name=authenticators,proto3" json:"authenticators,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{5}
}

func (x *Request) GetId() *ReservationID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Request) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Request) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Request) GetAuthenticators() *Authenticators {
	if x != nil {
		return x.Authenticators
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SuccessFailure:
	//	*Response_Success_
	//	*Response_Failure_
	SuccessFailure isResponse_SuccessFailure `protobuf_oneof:"success_failure"`
	Timestamp      uint32                    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Authenticators *Authenticators           `protobuf:"bytes,4,opt,name=authenticators,proto3" json:"authenticators,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{6}
}

func (m *Response) GetSuccessFailure() isResponse_SuccessFailure {
	if m != nil {
		return m.SuccessFailure
	}
	return nil
}

func (x *Response) GetSuccess() *Response_Success {
	if x, ok := x.GetSuccessFailure().(*Response_Success_); ok {
		return x.Success
	}
	return nil
}

func (x *Response) GetFailure() *Response_Failure {
	if x, ok := x.GetSuccessFailure().(*Response_Failure_); ok {
		return x.Failure
	}
	return nil
}

func (x *Response) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response) GetAuthenticators() *Authenticators {
	if x != nil {
		return x.Authenticators
	}
	return nil
}

type isResponse_SuccessFailure interface {
	isResponse_SuccessFailure()
}

type Response_Success_ struct {
	Success *Response_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type Response_Failure_ struct {
	Failure *Response_Failure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*Response_Success_) isResponse_SuccessFailure() {}

func (*Response_Failure_) isResponse_SuccessFailure() {}

type SegmentSetupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *Request                    `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Params *SegmentSetupRequest_Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *SegmentSetupRequest) Reset() {
	*x = SegmentSetupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentSetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentSetupRequest) ProtoMessage() {}

func (x *SegmentSetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentSetupRequest.ProtoReflect.Descriptor instead.
func (*SegmentSetupRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{7}
}

func (x *SegmentSetupRequest) GetBase() *Request {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SegmentSetupRequest) GetParams() *SegmentSetupRequest_Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type SegmentSetupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SuccessFailure:
	//	*SegmentSetupResponse_Token
	//	*SegmentSetupResponse_Failure_
	SuccessFailure isSegmentSetupResponse_SuccessFailure `protobuf_oneof:"success_failure"`
	Timestamp      uint32                                `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Authenticators *Authenticators                       `protobuf:"bytes,4,opt,name=authenticators,proto3" json:"authenticators,omitempty"`
}

func (x *SegmentSetupResponse) Reset() {
	*x = SegmentSetupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentSetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentSetupResponse) ProtoMessage() {}

func (x *SegmentSetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentSetupResponse.ProtoReflect.Descriptor instead.
func (*SegmentSetupResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{8}
}

func (m *SegmentSetupResponse) GetSuccessFailure() isSegmentSetupResponse_SuccessFailure {
	if m != nil {
		return m.SuccessFailure
	}
	return nil
}

func (x *SegmentSetupResponse) GetToken() []byte {
	if x, ok := x.GetSuccessFailure().(*SegmentSetupResponse_Token); ok {
		return x.Token
	}
	return nil
}

func (x *SegmentSetupResponse) GetFailure() *SegmentSetupResponse_Failure {
	if x, ok := x.GetSuccessFailure().(*SegmentSetupResponse_Failure_); ok {
		return x.Failure
	}
	return nil
}

func (x *SegmentSetupResponse) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SegmentSetupResponse) GetAuthenticators() *Authenticators {
	if x != nil {
		return x.Authenticators
	}
	return nil
}

type isSegmentSetupResponse_SuccessFailure interface {
	isSegmentSetupResponse_SuccessFailure()
}

type SegmentSetupResponse_Token struct {
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3,oneof"`
}

type SegmentSetupResponse_Failure_ struct {
	Failure *SegmentSetupResponse_Failure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*SegmentSetupResponse_Token) isSegmentSetupResponse_SuccessFailure() {}

func (*SegmentSetupResponse_Failure_) isSegmentSetupResponse_SuccessFailure() {}

type ConfirmSegmentIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *Request `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *ConfirmSegmentIndexRequest) Reset() {
	*x = ConfirmSegmentIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmSegmentIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmSegmentIndexRequest) ProtoMessage() {}

func (x *ConfirmSegmentIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmSegmentIndexRequest.ProtoReflect.Descriptor instead.
func (*ConfirmSegmentIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{9}
}

func (x *ConfirmSegmentIndexRequest) GetBase() *Request {
	if x != nil {
		return x.Base
	}
	return nil
}

type ConfirmSegmentIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *Response `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *ConfirmSegmentIndexResponse) Reset() {
	*x = ConfirmSegmentIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmSegmentIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmSegmentIndexResponse) ProtoMessage() {}

func (x *ConfirmSegmentIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmSegmentIndexResponse.ProtoReflect.Descriptor instead.
func (*ConfirmSegmentIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{10}
}

func (x *ConfirmSegmentIndexResponse) GetBase() *Response {
	if x != nil {
		return x.Base
	}
	return nil
}

type ActivateSegmentIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *Request `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *ActivateSegmentIndexRequest) Reset() {
	*x = ActivateSegmentIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateSegmentIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateSegmentIndexRequest) ProtoMessage() {}

func (x *ActivateSegmentIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateSegmentIndexRequest.ProtoReflect.Descriptor instead.
func (*ActivateSegmentIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{11}
}

func (x *ActivateSegmentIndexRequest) GetBase() *Request {
	if x != nil {
		return x.Base
	}
	return nil
}

type ActivateSegmentIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *Response `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *ActivateSegmentIndexResponse) Reset() {
	*x = ActivateSegmentIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateSegmentIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateSegmentIndexResponse) ProtoMessage() {}

func (x *ActivateSegmentIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateSegmentIndexResponse.ProtoReflect.Descriptor instead.
func (*ActivateSegmentIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{12}
}

func (x *ActivateSegmentIndexResponse) GetBase() *Response {
	if x != nil {
		return x.Base
	}
	return nil
}

type TeardownSegmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *Request `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *TeardownSegmentRequest) Reset() {
	*x = TeardownSegmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeardownSegmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeardownSegmentRequest) ProtoMessage() {}

func (x *TeardownSegmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeardownSegmentRequest.ProtoReflect.Descriptor instead.
func (*TeardownSegmentRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{13}
}

func (x *TeardownSegmentRequest) GetBase() *Request {
	if x != nil {
		return x.Base
	}
	return nil
}

type TeardownSegmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *Response `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *TeardownSegmentResponse) Reset() {
	*x = TeardownSegmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeardownSegmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeardownSegmentResponse) ProtoMessage() {}

func (x *TeardownSegmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeardownSegmentResponse.ProtoReflect.Descriptor instead.
func (*TeardownSegmentResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{14}
}

func (x *TeardownSegmentResponse) GetBase() *Response {
	if x != nil {
		return x.Base
	}
	return nil
}

type CleanupSegmentIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *Request `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *CleanupSegmentIndexRequest) Reset() {
	*x = CleanupSegmentIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanupSegmentIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupSegmentIndexRequest) ProtoMessage() {}

func (x *CleanupSegmentIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupSegmentIndexRequest.ProtoReflect.Descriptor instead.
func (*CleanupSegmentIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{15}
}

func (x *CleanupSegmentIndexRequest) GetBase() *Request {
	if x != nil {
		return x.Base
	}
	return nil
}

type CleanupSegmentIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *Response `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *CleanupSegmentIndexResponse) Reset() {
	*x = CleanupSegmentIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanupSegmentIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupSegmentIndexResponse) ProtoMessage() {}

func (x *CleanupSegmentIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupSegmentIndexResponse.ProtoReflect.Descriptor instead.
func (*CleanupSegmentIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{16}
}

func (x *CleanupSegmentIndexResponse) GetBase() *Response {
	if x != nil {
		return x.Base
	}
	return nil
}

type ListReservationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DstIa          uint64          `protobuf:"varint,1,opt,name=dst_ia,json=dstIa,proto3" json:"dst_ia,omitempty"`
	PathType       uint32          `protobuf:"varint,2,opt,name=path_type,json=pathType,proto3" json:"path_type,omitempty"`
	Authenticators *Authenticators `protobuf:"bytes,3,opt,name=authenticators,proto3" json:"authenticators,omitempty"`
}

func (x *ListReservationsRequest) Reset() {
	*x = ListReservationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReservationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReservationsRequest) ProtoMessage() {}

func (x *ListReservationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReservationsRequest.ProtoReflect.Descriptor instead.
func (*ListReservationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{17}
}

func (x *ListReservationsRequest) GetDstIa() uint64 {
	if x != nil {
		return x.DstIa
	}
	return 0
}

func (x *ListReservationsRequest) GetPathType() uint32 {
	if x != nil {
		return x.PathType
	}
	return 0
}

func (x *ListReservationsRequest) GetAuthenticators() *Authenticators {
	if x != nil {
		return x.Authenticators
	}
	return nil
}

type ListReservationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage   string                                       `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Reservations   []*ListReservationsResponse_ReservationLooks `protobuf:"bytes,2,rep,name=reservations,proto3" json:"reservations,omitempty"`
	Authenticators *Authenticators                              `protobuf:"bytes,3,opt,name=authenticators,proto3" json:"authenticators,omitempty"`
}

func (x *ListReservationsResponse) Reset() {
	*x = ListReservationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReservationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReservationsResponse) ProtoMessage() {}

func (x *ListReservationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReservationsResponse.ProtoReflect.Descriptor instead.
func (*ListReservationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{18}
}

func (x *ListReservationsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ListReservationsResponse) GetReservations() []*ListReservationsResponse_ReservationLooks {
	if x != nil {
		return x.Reservations
	}
	return nil
}

func (x *ListReservationsResponse) GetAuthenticators() *Authenticators {
	if x != nil {
		return x.Authenticators
	}
	return nil
}

type E2ERequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base    *Request `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SrcHost []byte   `protobuf:"bytes,2,opt,name=src_host,json=srcHost,proto3" json:"src_host,omitempty"`
	DstHost []byte   `protobuf:"bytes,3,opt,name=dst_host,json=dstHost,proto3" json:"dst_host,omitempty"`
}

func (x *E2ERequest) Reset() {
	*x = E2ERequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ERequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ERequest) ProtoMessage() {}

func (x *E2ERequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ERequest.ProtoReflect.Descriptor instead.
func (*E2ERequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{19}
}

func (x *E2ERequest) GetBase() *Request {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *E2ERequest) GetSrcHost() []byte {
	if x != nil {
		return x.SrcHost
	}
	return nil
}

func (x *E2ERequest) GetDstHost() []byte {
	if x != nil {
		return x.DstHost
	}
	return nil
}

type E2ESetupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base            *E2ERequest                     `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	RequestedBw     uint32                          `protobuf:"varint,2,opt,name=requested_bw,json=requestedBw,proto3" json:"requested_bw,omitempty"`
	Params          *E2ESetupRequest_PathParams     `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	Allocationtrail []*E2ESetupRequest_E2ESetupBead `protobuf:"bytes,4,rep,name=allocationtrail,proto3" json:"allocationtrail,omitempty"`
}

func (x *E2ESetupRequest) Reset() {
	*x = E2ESetupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ESetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ESetupRequest) ProtoMessage() {}

func (x *E2ESetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ESetupRequest.ProtoReflect.Descriptor instead.
func (*E2ESetupRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{20}
}

func (x *E2ESetupRequest) GetBase() *E2ERequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *E2ESetupRequest) GetRequestedBw() uint32 {
	if x != nil {
		return x.RequestedBw
	}
	return 0
}

func (x *E2ESetupRequest) GetParams() *E2ESetupRequest_PathParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *E2ESetupRequest) GetAllocationtrail() []*E2ESetupRequest_E2ESetupBead {
	if x != nil {
		return x.Allocationtrail
	}
	return nil
}

type E2ESetupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure        *E2ESetupResponse_Failure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	Token          []byte                    `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Timestamp      uint32                    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Authenticators *Authenticators           `protobuf:"bytes,4,opt,name=authenticators,proto3" json:"authenticators,omitempty"`
}

func (x *E2ESetupResponse) Reset() {
	*x = E2ESetupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ESetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ESetupResponse) ProtoMessage() {}

func (x *E2ESetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ESetupResponse.ProtoReflect.Descriptor instead.
func (*E2ESetupResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{21}
}

func (x *E2ESetupResponse) GetFailure() *E2ESetupResponse_Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *E2ESetupResponse) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *E2ESetupResponse) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *E2ESetupResponse) GetAuthenticators() *Authenticators {
	if x != nil {
		return x.Authenticators
	}
	return nil
}

type CleanupE2EIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *E2ERequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *CleanupE2EIndexRequest) Reset() {
	*x = CleanupE2EIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanupE2EIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupE2EIndexRequest) ProtoMessage() {}

func (x *CleanupE2EIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupE2EIndexRequest.ProtoReflect.Descriptor instead.
func (*CleanupE2EIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{22}
}

func (x *CleanupE2EIndexRequest) GetBase() *E2ERequest {
	if x != nil {
		return x.Base
	}
	return nil
}

type CleanupE2EIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *Response `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *CleanupE2EIndexResponse) Reset() {
	*x = CleanupE2EIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanupE2EIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupE2EIndexResponse) ProtoMessage() {}

func (x *CleanupE2EIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupE2EIndexResponse.ProtoReflect.Descriptor instead.
func (*CleanupE2EIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{23}
}

func (x *CleanupE2EIndexResponse) GetBase() *Response {
	if x != nil {
		return x.Base
	}
	return nil
}

type ListStitchablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DstIa uint64 `protobuf:"varint,1,opt,name=dst_ia,json=dstIa,proto3" json:"dst_ia,omitempty"`
}

func (x *ListStitchablesRequest) Reset() {
	*x = ListStitchablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStitchablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStitchablesRequest) ProtoMessage() {}

func (x *ListStitchablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStitchablesRequest.ProtoReflect.Descriptor instead.
func (*ListStitchablesRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{24}
}

func (x *ListStitchablesRequest) GetDstIa() uint64 {
	if x != nil {
		return x.DstIa
	}
	return 0
}

type ListStitchablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string                                       `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	SrcIa        uint64                                       `protobuf:"varint,2,opt,name=src_ia,json=srcIa,proto3" json:"src_ia,omitempty"`
	DstIa        uint64                                       `protobuf:"varint,3,opt,name=dst_ia,json=dstIa,proto3" json:"dst_ia,omitempty"`
	Up           []*ListReservationsResponse_ReservationLooks `protobuf:"bytes,4,rep,name=up,proto3" json:"up,omitempty"`
	Core         []*ListReservationsResponse_ReservationLooks `protobuf:"bytes,5,rep,name=core,proto3" json:"core,omitempty"`
	Down         []*ListReservationsResponse_ReservationLooks `protobuf:"bytes,6,rep,name=down,proto3" json:"down,omitempty"`
}

func (x *ListStitchablesResponse) Reset() {
	*x = ListStitchablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStitchablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStitchablesResponse) ProtoMessage() {}

func (x *ListStitchablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStitchablesResponse.ProtoReflect.Descriptor instead.
func (*ListStitchablesResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{25}
}

func (x *ListStitchablesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ListStitchablesResponse) GetSrcIa() uint64 {
	if x != nil {
		return x.SrcIa
	}
	return 0
}

func (x *ListStitchablesResponse) GetDstIa() uint64 {
	if x != nil {
		return x.DstIa
	}
	return 0
}

func (x *ListStitchablesResponse) GetUp() []*ListReservationsResponse_ReservationLooks {
	if x != nil {
		return x.Up
	}
	return nil
}

func (x *ListStitchablesResponse) GetCore() []*ListReservationsResponse_ReservationLooks {
	if x != nil {
		return x.Core
	}
	return nil
}

func (x *ListStitchablesResponse) GetDown() []*ListReservationsResponse_ReservationLooks {
	if x != nil {
		return x.Down
	}
	return nil
}

type SetupReservationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *ReservationID   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Index          uint32           `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Timestamp      uint32           `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SrcHost        []byte           `protobuf:"bytes,4,opt,name=src_host,json=srcHost,proto3" json:"src_host,omitempty"`
	DstHost        []byte           `protobuf:"bytes,5,opt,name=dst_host,json=dstHost,proto3" json:"dst_host,omitempty"`
	RequestedBw    uint32           `protobuf:"varint,6,opt,name=requested_bw,json=requestedBw,proto3" json:"requested_bw,omitempty"`
	Segments       []*ReservationID `protobuf:"bytes,7,rep,name=segments,proto3" json:"segments,omitempty"`
	PathSteps      []*PathStep      `protobuf:"bytes,8,rep,name=path_steps,json=pathSteps,proto3" json:"path_steps,omitempty"`
	Authenticators *Authenticators  `protobuf:"bytes,9,opt,name=authenticators,proto3" json:"authenticators,omitempty"`
}

func (x *SetupReservationRequest) Reset() {
	*x = SetupReservationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupReservationRequest) ProtoMessage() {}

func (x *SetupReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupReservationRequest.ProtoReflect.Descriptor instead.
func (*SetupReservationRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{26}
}

func (x *SetupReservationRequest) GetId() *ReservationID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SetupReservationRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SetupReservationRequest) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SetupReservationRequest) GetSrcHost() []byte {
	if x != nil {
		return x.SrcHost
	}
	return nil
}

func (x *SetupReservationRequest) GetDstHost() []byte {
	if x != nil {
		return x.DstHost
	}
	return nil
}

func (x *SetupReservationRequest) GetRequestedBw() uint32 {
	if x != nil {
		return x.RequestedBw
	}
	return 0
}

func (x *SetupReservationRequest) GetSegments() []*ReservationID {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *SetupReservationRequest) GetPathSteps() []*PathStep {
	if x != nil {
		return x.PathSteps
	}
	return nil
}

func (x *SetupReservationRequest) GetAuthenticators() *Authenticators {
	if x != nil {
		return x.Authenticators
	}
	return nil
}

type SetupReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure        *SetupReservationResponse_Failure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	Success        *SetupReservationResponse_Success `protobuf:"bytes,2,opt,name=success,proto3" json:"success,omitempty"`
	Timestamp      uint32                            `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Authenticators *Authenticators                   `protobuf:"bytes,4,opt,name=authenticators,proto3" json:"authenticators,omitempty"`
}

func (x *SetupReservationResponse) Reset() {
	*x = SetupReservationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupReservationResponse) ProtoMessage() {}

func (x *SetupReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupReservationResponse.ProtoReflect.Descriptor instead.
func (*SetupReservationResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{27}
}

func (x *SetupReservationResponse) GetFailure() *SetupReservationResponse_Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *SetupReservationResponse) GetSuccess() *SetupReservationResponse_Success {
	if x != nil {
		return x.Success
	}
	return nil
}

func (x *SetupReservationResponse) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SetupReservationResponse) GetAuthenticators() *Authenticators {
	if x != nil {
		return x.Authenticators
	}
	return nil
}

type CleanupReservationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base    *Request    `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SrcHost []byte      `protobuf:"bytes,2,opt,name=src_host,json=srcHost,proto3" json:"src_host,omitempty"`
	DstHost []byte      `protobuf:"bytes,3,opt,name=dst_host,json=dstHost,proto3" json:"dst_host,omitempty"`
	Steps   []*PathStep `protobuf:"bytes,4,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *CleanupReservationRequest) Reset() {
	*x = CleanupReservationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanupReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupReservationRequest) ProtoMessage() {}

func (x *CleanupReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupReservationRequest.ProtoReflect.Descriptor instead.
func (*CleanupReservationRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{28}
}

func (x *CleanupReservationRequest) GetBase() *Request {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CleanupReservationRequest) GetSrcHost() []byte {
	if x != nil {
		return x.SrcHost
	}
	return nil
}

func (x *CleanupReservationRequest) GetDstHost() []byte {
	if x != nil {
		return x.DstHost
	}
	return nil
}

func (x *CleanupReservationRequest) GetSteps() []*PathStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

type CleanupReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure        *CleanupReservationResponse_Failure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	Timestamp      uint32                              `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Authenticators *Authenticators                     `protobuf:"bytes,3,opt,name=authenticators,proto3" json:"authenticators,omitempty"`
}

func (x *CleanupReservationResponse) Reset() {
	*x = CleanupReservationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanupReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupReservationResponse) ProtoMessage() {}

func (x *CleanupReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupReservationResponse.ProtoReflect.Descriptor instead.
func (*CleanupReservationResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{29}
}

func (x *CleanupReservationResponse) GetFailure() *CleanupReservationResponse_Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *CleanupReservationResponse) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CleanupReservationResponse) GetAuthenticators() *Authenticators {
	if x != nil {
		return x.Authenticators
	}
	return nil
}

type AddAdmissionEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DstHost    []byte `protobuf:"bytes,1,opt,name=dst_host,json=dstHost,proto3" json:"dst_host,omitempty"`
	ValidUntil uint32 `protobuf:"varint,2,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	RegexpIa   string `protobuf:"bytes,3,opt,name=regexp_ia,json=regexpIa,proto3" json:"regexp_ia,omitempty"`
	RegexpHost string `protobuf:"bytes,4,opt,name=regexp_host,json=regexpHost,proto3" json:"regexp_host,omitempty"`
	Accept     bool   `protobuf:"varint,5,opt,name=accept,proto3" json:"accept,omitempty"`
}

func (x *AddAdmissionEntryRequest) Reset() {
	*x = AddAdmissionEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdmissionEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdmissionEntryRequest) ProtoMessage() {}

func (x *AddAdmissionEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdmissionEntryRequest.ProtoReflect.Descriptor instead.
func (*AddAdmissionEntryRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{30}
}

func (x *AddAdmissionEntryRequest) GetDstHost() []byte {
	if x != nil {
		return x.DstHost
	}
	return nil
}

func (x *AddAdmissionEntryRequest) GetValidUntil() uint32 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

func (x *AddAdmissionEntryRequest) GetRegexpIa() string {
	if x != nil {
		return x.RegexpIa
	}
	return ""
}

func (x *AddAdmissionEntryRequest) GetRegexpHost() string {
	if x != nil {
		return x.RegexpHost
	}
	return ""
}

func (x *AddAdmissionEntryRequest) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

type AddAdmissionEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidUntil uint32 `protobuf:"varint,1,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
}

func (x *AddAdmissionEntryResponse) Reset() {
	*x = AddAdmissionEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdmissionEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdmissionEntryResponse) ProtoMessage() {}

func (x *AddAdmissionEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdmissionEntryResponse.ProtoReflect.Descriptor instead.
func (*AddAdmissionEntryResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{31}
}

func (x *AddAdmissionEntryResponse) GetValidUntil() uint32 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

type ActiveIndicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColigateId string `protobuf:"bytes,1,opt,name=coligate_id,json=coligateId,proto3" json:"coligate_id,omitempty"`
}

func (x *ActiveIndicesRequest) Reset() {
	*x = ActiveIndicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveIndicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveIndicesRequest) ProtoMessage() {}

func (x *ActiveIndicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveIndicesRequest.ProtoReflect.Descriptor instead.
func (*ActiveIndicesRequest) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{32}
}

func (x *ActiveIndicesRequest) GetColigateId() string {
	if x != nil {
		return x.ColigateId
	}
	return ""
}

type ActiveIndicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reservations []*ActiveIndicesResponse_Reservation `protobuf:"bytes,1,rep,name=reservations,proto3" json:"reservations,omitempty"`
}

func (x *ActiveIndicesResponse) Reset() {
	*x = ActiveIndicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveIndicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveIndicesResponse) ProtoMessage() {}

func (x *ActiveIndicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveIndicesResponse.ProtoReflect.Descriptor instead.
func (*ActiveIndicesResponse) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{33}
}

func (x *ActiveIndicesResponse) GetReservations() []*ActiveIndicesResponse_Reservation {
	if x != nil {
		return x.Reservations
	}
	return nil
}

type Response_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response_Success) Reset() {
	*x = Response_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Success) ProtoMessage() {}

func (x *Response_Success) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Success.ProtoReflect.Descriptor instead.
func (*Response_Success) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{6, 0}
}

type Response_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode  uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	FailingHop uint32 `protobuf:"varint,3,opt,name=failing_hop,json=failingHop,proto3" json:"failing_hop,omitempty"`
}

func (x *Response_Failure) Reset() {
	*x = Response_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Failure) ProtoMessage() {}

func (x *Response_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Failure.ProtoReflect.Descriptor instead.
func (*Response_Failure) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Response_Failure) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *Response_Failure) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Response_Failure) GetFailingHop() uint32 {
	if x != nil {
		return x.FailingHop
	}
	return 0
}

type SegmentSetupRequest_Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpirationTime   uint32            `protobuf:"varint,1,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	Rlc              uint32            `protobuf:"varint,2,opt,name=rlc,proto3" json:"rlc,omitempty"`
	PathType         uint32            `protobuf:"varint,3,opt,name=path_type,json=pathType,proto3" json:"path_type,omitempty"`
	Minbw            uint32            `protobuf:"varint,4,opt,name=minbw,proto3" json:"minbw,omitempty"`
	Maxbw            uint32            `protobuf:"varint,5,opt,name=maxbw,proto3" json:"maxbw,omitempty"`
	Splitcls         uint32            `protobuf:"varint,6,opt,name=splitcls,proto3" json:"splitcls,omitempty"`
	PropsAtStart     *PathEndProps     `protobuf:"bytes,7,opt,name=props_at_start,json=propsAtStart,proto3" json:"props_at_start,omitempty"`
	PropsAtEnd       *PathEndProps     `protobuf:"bytes,8,opt,name=props_at_end,json=propsAtEnd,proto3" json:"props_at_end,omitempty"`
	Allocationtrail  []*AllocationBead `protobuf:"bytes,9,rep,name=allocationtrail,proto3" json:"allocationtrail,omitempty"`
	ReverseTraveling bool              `protobuf:"varint,10,opt,name=reverse_traveling,json=reverseTraveling,proto3" json:"reverse_traveling,omitempty"`
	CurrentStep      uint32            `protobuf:"varint,11,opt,name=currentStep,proto3" json:"currentStep,omitempty"`
	Steps            []*PathStep       `protobuf:"bytes,12,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *SegmentSetupRequest_Params) Reset() {
	*x = SegmentSetupRequest_Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentSetupRequest_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentSetupRequest_Params) ProtoMessage() {}

func (x *SegmentSetupRequest_Params) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentSetupRequest_Params.ProtoReflect.Descriptor instead.
func (*SegmentSetupRequest_Params) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{7, 0}
}

func (x *SegmentSetupRequest_Params) GetExpirationTime() uint32 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetRlc() uint32 {
	if x != nil {
		return x.Rlc
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetPathType() uint32 {
	if x != nil {
		return x.PathType
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetMinbw() uint32 {
	if x != nil {
		return x.Minbw
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetMaxbw() uint32 {
	if x != nil {
		return x.Maxbw
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetSplitcls() uint32 {
	if x != nil {
		return x.Splitcls
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetPropsAtStart() *PathEndProps {
	if x != nil {
		return x.PropsAtStart
	}
	return nil
}

func (x *SegmentSetupRequest_Params) GetPropsAtEnd() *PathEndProps {
	if x != nil {
		return x.PropsAtEnd
	}
	return nil
}

func (x *SegmentSetupRequest_Params) GetAllocationtrail() []*AllocationBead {
	if x != nil {
		return x.Allocationtrail
	}
	return nil
}

func (x *SegmentSetupRequest_Params) GetReverseTraveling() bool {
	if x != nil {
		return x.ReverseTraveling
	}
	return false
}

func (x *SegmentSetupRequest_Params) GetCurrentStep() uint32 {
	if x != nil {
		return x.CurrentStep
	}
	return 0
}

func (x *SegmentSetupRequest_Params) GetSteps() []*PathStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

type SegmentSetupResponse_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure *Response_Failure           `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	Request *SegmentSetupRequest_Params `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *SegmentSetupResponse_Failure) Reset() {
	*x = SegmentSetupResponse_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentSetupResponse_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentSetupResponse_Failure) ProtoMessage() {}

func (x *SegmentSetupResponse_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentSetupResponse_Failure.ProtoReflect.Descriptor instead.
func (*SegmentSetupResponse_Failure) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{8, 0}
}

func (x *SegmentSetupResponse_Failure) GetFailure() *Response_Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *SegmentSetupResponse_Failure) GetRequest() *SegmentSetupRequest_Params {
	if x != nil {
		return x.Request
	}
	return nil
}

type ListReservationsResponse_ReservationLooks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *ReservationID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SrcIa          uint64         `protobuf:"varint,2,opt,name=src_ia,json=srcIa,proto3" json:"src_ia,omitempty"`
	DstIa          uint64         `protobuf:"varint,3,opt,name=dst_ia,json=dstIa,proto3" json:"dst_ia,omitempty"`
	ExpirationTime uint32         `protobuf:"varint,4,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	Minbw          uint32         `protobuf:"varint,5,opt,name=minbw,proto3" json:"minbw,omitempty"`
	Maxbw          uint32         `protobuf:"varint,6,opt,name=maxbw,proto3" json:"maxbw,omitempty"`
	Allocbw        uint32         `protobuf:"varint,7,opt,name=allocbw,proto3" json:"allocbw,omitempty"`
	Splitcls       uint32         `protobuf:"varint,8,opt,name=splitcls,proto3" json:"splitcls,omitempty"`
	PathSteps      []*PathStep    `protobuf:"bytes,9,rep,name=path_steps,json=pathSteps,proto3" json:"path_steps,omitempty"`
}

func (x *ListReservationsResponse_ReservationLooks) Reset() {
	*x = ListReservationsResponse_ReservationLooks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReservationsResponse_ReservationLooks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReservationsResponse_ReservationLooks) ProtoMessage() {}

func (x *ListReservationsResponse_ReservationLooks) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReservationsResponse_ReservationLooks.ProtoReflect.Descriptor instead.
func (*ListReservationsResponse_ReservationLooks) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{18, 0}
}

func (x *ListReservationsResponse_ReservationLooks) GetId() *ReservationID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListReservationsResponse_ReservationLooks) GetSrcIa() uint64 {
	if x != nil {
		return x.SrcIa
	}
	return 0
}

func (x *ListReservationsResponse_ReservationLooks) GetDstIa() uint64 {
	if x != nil {
		return x.DstIa
	}
	return 0
}

func (x *ListReservationsResponse_ReservationLooks) GetExpirationTime() uint32 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

func (x *ListReservationsResponse_ReservationLooks) GetMinbw() uint32 {
	if x != nil {
		return x.Minbw
	}
	return 0
}

func (x *ListReservationsResponse_ReservationLooks) GetMaxbw() uint32 {
	if x != nil {
		return x.Maxbw
	}
	return 0
}

func (x *ListReservationsResponse_ReservationLooks) GetAllocbw() uint32 {
	if x != nil {
		return x.Allocbw
	}
	return 0
}

func (x *ListReservationsResponse_ReservationLooks) GetSplitcls() uint32 {
	if x != nil {
		return x.Splitcls
	}
	return 0
}

func (x *ListReservationsResponse_ReservationLooks) GetPathSteps() []*PathStep {
	if x != nil {
		return x.PathSteps
	}
	return nil
}

type E2ESetupRequest_PathParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Segments       []*ReservationID `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	CurrentSegment uint32           `protobuf:"varint,2,opt,name=current_segment,json=currentSegment,proto3" json:"current_segment,omitempty"`
	CurrentStep    uint32           `protobuf:"varint,4,opt,name=current_step,json=currentStep,proto3" json:"current_step,omitempty"`
	Steps          []*PathStep      `protobuf:"bytes,5,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *E2ESetupRequest_PathParams) Reset() {
	*x = E2ESetupRequest_PathParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ESetupRequest_PathParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ESetupRequest_PathParams) ProtoMessage() {}

func (x *E2ESetupRequest_PathParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ESetupRequest_PathParams.ProtoReflect.Descriptor instead.
func (*E2ESetupRequest_PathParams) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{20, 0}
}

func (x *E2ESetupRequest_PathParams) GetSegments() []*ReservationID {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *E2ESetupRequest_PathParams) GetCurrentSegment() uint32 {
	if x != nil {
		return x.CurrentSegment
	}
	return 0
}

func (x *E2ESetupRequest_PathParams) GetCurrentStep() uint32 {
	if x != nil {
		return x.CurrentStep
	}
	return 0
}

func (x *E2ESetupRequest_PathParams) GetSteps() []*PathStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

type E2ESetupRequest_E2ESetupBead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Maxbw uint32 `protobuf:"varint,1,opt,name=maxbw,proto3" json:"maxbw,omitempty"`
}

func (x *E2ESetupRequest_E2ESetupBead) Reset() {
	*x = E2ESetupRequest_E2ESetupBead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ESetupRequest_E2ESetupBead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ESetupRequest_E2ESetupBead) ProtoMessage() {}

func (x *E2ESetupRequest_E2ESetupBead) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ESetupRequest_E2ESetupBead.ProtoReflect.Descriptor instead.
func (*E2ESetupRequest_E2ESetupBead) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{20, 1}
}

func (x *E2ESetupRequest_E2ESetupBead) GetMaxbw() uint32 {
	if x != nil {
		return x.Maxbw
	}
	return 0
}

type E2ESetupResponse_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message         string                          `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	FailedStep      uint32                          `protobuf:"varint,2,opt,name=failed_step,json=failedStep,proto3" json:"failed_step,omitempty"`
	Allocationtrail []*E2ESetupRequest_E2ESetupBead `protobuf:"bytes,3,rep,name=allocationtrail,proto3" json:"allocationtrail,omitempty"`
}

func (x *E2ESetupResponse_Failure) Reset() {
	*x = E2ESetupResponse_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ESetupResponse_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ESetupResponse_Failure) ProtoMessage() {}

func (x *E2ESetupResponse_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ESetupResponse_Failure.ProtoReflect.Descriptor instead.
func (*E2ESetupResponse_Failure) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{21, 0}
}

func (x *E2ESetupResponse_Failure) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *E2ESetupResponse_Failure) GetFailedStep() uint32 {
	if x != nil {
		return x.FailedStep
	}
	return 0
}

func (x *E2ESetupResponse_Failure) GetAllocationtrail() []*E2ESetupRequest_E2ESetupBead {
	if x != nil {
		return x.Allocationtrail
	}
	return nil
}

type SetupReservationResponse_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string   `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	FailedStep   uint32   `protobuf:"varint,2,opt,name=failed_step,json=failedStep,proto3" json:"failed_step,omitempty"`
	AllocTrail   []uint32 `protobuf:"varint,3,rep,packed,name=alloc_trail,json=allocTrail,proto3" json:"alloc_trail,omitempty"`
}

func (x *SetupReservationResponse_Failure) Reset() {
	*x = SetupReservationResponse_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupReservationResponse_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupReservationResponse_Failure) ProtoMessage() {}

func (x *SetupReservationResponse_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupReservationResponse_Failure.ProtoReflect.Descriptor instead.
func (*SetupReservationResponse_Failure) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{27, 0}
}

func (x *SetupReservationResponse_Failure) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SetupReservationResponse_Failure) GetFailedStep() uint32 {
	if x != nil {
		return x.FailedStep
	}
	return 0
}

func (x *SetupReservationResponse_Failure) GetAllocTrail() []uint32 {
	if x != nil {
		return x.AllocTrail
	}
	return nil
}

type SetupReservationResponse_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawPath []byte `protobuf:"bytes,1,opt,name=raw_path,json=rawPath,proto3" json:"raw_path,omitempty"`
	NextHop string `protobuf:"bytes,2,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
}

func (x *SetupReservationResponse_Success) Reset() {
	*x = SetupReservationResponse_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupReservationResponse_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupReservationResponse_Success) ProtoMessage() {}

func (x *SetupReservationResponse_Success) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupReservationResponse_Success.ProtoReflect.Descriptor instead.
func (*SetupReservationResponse_Success) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{27, 1}
}

func (x *SetupReservationResponse_Success) GetRawPath() []byte {
	if x != nil {
		return x.RawPath
	}
	return nil
}

func (x *SetupReservationResponse_Success) GetNextHop() string {
	if x != nil {
		return x.NextHop
	}
	return ""
}

type CleanupReservationResponse_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	FailedStep   uint32 `protobuf:"varint,2,opt,name=failed_step,json=failedStep,proto3" json:"failed_step,omitempty"`
}

func (x *CleanupReservationResponse_Failure) Reset() {
	*x = CleanupReservationResponse_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanupReservationResponse_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupReservationResponse_Failure) ProtoMessage() {}

func (x *CleanupReservationResponse_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupReservationResponse_Failure.ProtoReflect.Descriptor instead.
func (*CleanupReservationResponse_Failure) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{29, 0}
}

func (x *CleanupReservationResponse_Failure) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CleanupReservationResponse_Failure) GetFailedStep() uint32 {
	if x != nil {
		return x.FailedStep
	}
	return 0
}

type ActiveIndicesResponse_Reservation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *ReservationID                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Egress  uint32                                    `protobuf:"varint,2,opt,name=egress,proto3" json:"egress,omitempty"`
	Indices []*ActiveIndicesResponse_ReservationIndex `protobuf:"bytes,3,rep,name=indices,proto3" json:"indices,omitempty"`
}

func (x *ActiveIndicesResponse_Reservation) Reset() {
	*x = ActiveIndicesResponse_Reservation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveIndicesResponse_Reservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveIndicesResponse_Reservation) ProtoMessage() {}

func (x *ActiveIndicesResponse_Reservation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveIndicesResponse_Reservation.ProtoReflect.Descriptor instead.
func (*ActiveIndicesResponse_Reservation) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{33, 0}
}

func (x *ActiveIndicesResponse_Reservation) GetId() *ReservationID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ActiveIndicesResponse_Reservation) GetEgress() uint32 {
	if x != nil {
		return x.Egress
	}
	return 0
}

func (x *ActiveIndicesResponse_Reservation) GetIndices() []*ActiveIndicesResponse_ReservationIndex {
	if x != nil {
		return x.Indices
	}
	return nil
}

type ActiveIndicesResponse_ReservationIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index          uint32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	ExpirationTime uint32   `protobuf:"varint,2,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	AllocBw        uint32   `protobuf:"varint,3,opt,name=allocBw,proto3" json:"allocBw,omitempty"`
	Sigmas         [][]byte `protobuf:"bytes,4,rep,name=sigmas,proto3" json:"sigmas,omitempty"`
}

func (x *ActiveIndicesResponse_ReservationIndex) Reset() {
	*x = ActiveIndicesResponse_ReservationIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_colibri_v1_colibri_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveIndicesResponse_ReservationIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveIndicesResponse_ReservationIndex) ProtoMessage() {}

func (x *ActiveIndicesResponse_ReservationIndex) ProtoReflect() protoreflect.Message {
	mi := &file_proto_colibri_v1_colibri_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveIndicesResponse_ReservationIndex.ProtoReflect.Descriptor instead.
func (*ActiveIndicesResponse_ReservationIndex) Descriptor() ([]byte, []int) {
	return file_proto_colibri_v1_colibri_proto_rawDescGZIP(), []int{33, 1}
}

func (x *ActiveIndicesResponse_ReservationIndex) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ActiveIndicesResponse_ReservationIndex) GetExpirationTime() uint32 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

func (x *ActiveIndicesResponse_ReservationIndex) GetAllocBw() uint32 {
	if x != nil {
		return x.AllocBw
	}
	return 0
}

func (x *ActiveIndicesResponse_ReservationIndex) GetSigmas() [][]byte {
	if x != nil {
		return x.Sigmas
	}
	return nil
}

var File_proto_colibri_v1_colibri_proto protoreflect.FileDescriptor

var file_proto_colibri_v1_colibri_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e,
	0x76, 0x31, 0x22, 0x3b, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x61, 0x73, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x22,
	0x40, 0x0a, 0x0c, 0x50, 0x61, 0x74, 0x68, 0x45, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x22, 0x40, 0x0a, 0x0e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x62, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x62, 0x77, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x61, 0x78, 0x62, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61,
	0x78, 0x62, 0x77, 0x22, 0x4c, 0x0a, 0x08, 0x50, 0x61, 0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x24, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x04, 0x6d, 0x61, 0x63, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x48, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x22, 0xf5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3e, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x3e, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x48, 0x0a,
	0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x09, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x1a, 0x63, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x68, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x70, 0x42, 0x11, 0x0a, 0x0f, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x22, 0x8a, 0x05, 0x0a, 0x13, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0xfd, 0x03, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x6c, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x6c, 0x63, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69,
	0x6e, 0x62, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x62, 0x77,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x62, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6d, 0x61, 0x78, 0x62, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x63,
	0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x63,
	0x6c, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x74, 0x68, 0x45, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70,
	0x73, 0x41, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70,
	0x73, 0x5f, 0x61, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x45, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x73, 0x41, 0x74, 0x45, 0x6e, 0x64, 0x12, 0x4a, 0x0a, 0x0f, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x65, 0x61, 0x64, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c,
	0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x65, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x65, 0x70, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c,
	0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x74, 0x65, 0x70,
	0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0x87, 0x03, 0x0a, 0x14, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4a, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x48, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x0e, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x8f, 0x01, 0x0a,
	0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x11,
	0x0a, 0x0f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x22, 0x4b, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x4d,
	0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x4c, 0x0a,
	0x1b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x1c, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x16, 0x54,
	0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x17, 0x54, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22,
	0x4b, 0x0a, 0x1a, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x1b,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x73, 0x74, 0x5f, 0x69,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x73, 0x74, 0x49, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0xa4, 0x04, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5f, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x1a, 0xb7, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x2f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f,
	0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x61, 0x12,
	0x15, 0x0a, 0x06, 0x64, 0x73, 0x74, 0x5f, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x64, 0x73, 0x74, 0x49, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x62, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6d, 0x69, 0x6e, 0x62, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x62, 0x77, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x62, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x62, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x62, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x63, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x63, 0x6c,
	0x73, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x74, 0x65,
	0x70, 0x52, 0x09, 0x70, 0x61, 0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x73, 0x22, 0x71, 0x0a, 0x0a,
	0x45, 0x32, 0x45, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x72, 0x63,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x22,
	0xf6, 0x03, 0x0a, 0x0f, 0x45, 0x32, 0x45, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x45, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x77, 0x12, 0x44, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x45, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x74, 0x68,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x58,
	0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x69,
	0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x45, 0x53, 0x65,
	0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x32, 0x45, 0x53, 0x65,
	0x74, 0x75, 0x70, 0x42, 0x65, 0x61, 0x64, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x1a, 0xc7, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x74,
	0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70,
	0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65,
	0x70, 0x73, 0x1a, 0x24, 0x0a, 0x0c, 0x45, 0x32, 0x45, 0x53, 0x65, 0x74, 0x75, 0x70, 0x42, 0x65,
	0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x62, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x62, 0x77, 0x22, 0xf7, 0x02, 0x0a, 0x10, 0x45, 0x32, 0x45,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x32, 0x45, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x48, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x1a, 0x9e, 0x01, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x65, 0x70, 0x12, 0x58, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x45, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x32, 0x45, 0x53, 0x65, 0x74, 0x75, 0x70, 0x42, 0x65, 0x61,
	0x64, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x69, 0x6c, 0x22, 0x4a, 0x0a, 0x16, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x45, 0x32, 0x45,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32,
	0x45, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x49,
	0x0a, 0x17, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x45, 0x32, 0x45, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x69, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x73, 0x74, 0x5f, 0x69, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x73, 0x74, 0x49, 0x61, 0x22, 0xdb, 0x02, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x69, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73,
	0x72, 0x63, 0x5f, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x72, 0x63,
	0x49, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x73, 0x74, 0x5f, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x64, 0x73, 0x74, 0x49, 0x61, 0x12, 0x4b, 0x0a, 0x02, 0x75, 0x70, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x6f,
	0x6b, 0x73, 0x52, 0x02, 0x75, 0x70, 0x12, 0x4f, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c,
	0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x73, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x4f, 0x0a, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x6f,
	0x6b, 0x73, 0x52, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x99, 0x03, 0x0a, 0x17, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x72, 0x63,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x77, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x42, 0x77, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c,
	0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x09, 0x70, 0x61, 0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x73, 0x12, 0x48, 0x0a, 0x0e, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x22, 0xd1, 0x03, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12,
	0x4c, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x48, 0x0a, 0x0e, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x70, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f,
	0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x53, 0x74, 0x65, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x1a, 0x3f, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x61, 0x77, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x22, 0xb2, 0x01, 0x0a, 0x19, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c,
	0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x72, 0x63, 0x48, 0x6f, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x64, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x73,
	0x74, 0x65, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0xa5, 0x02,
	0x0a, 0x1a, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x07,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x48, 0x0a, 0x0e, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x1a, 0x4f, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x53, 0x74, 0x65, 0x70, 0x22, 0xac, 0x01, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x5f, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x49, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x67, 0x65, 0x78, 0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x22, 0x3c, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74,
	0x69, 0x6c, 0x22, 0x37, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6c, 0x69, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0xa3, 0x03, 0x0a, 0x15,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xaa,
	0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x52, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x83, 0x01, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x42, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x42, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67,
	0x6d, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61,
	0x73, 0x32, 0x8a, 0x0b, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x0c, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c,
	0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x14, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0f, 0x54, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x72, 0x64,
	0x6f, 0x77, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74,
	0x0a, 0x13, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x53, 0x0a, 0x08, 0x45, 0x32, 0x45, 0x53, 0x65, 0x74, 0x75, 0x70, 0x12, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x32, 0x45, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x32, 0x45, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0f, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75,
	0x70, 0x45, 0x32, 0x45, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x75, 0x70, 0x45, 0x32, 0x45, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x45, 0x32,
	0x45, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x68, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x69, 0x74, 0x63, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x69, 0x74, 0x63,
	0x68, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x69, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x10, 0x53, 0x65,
	0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x12, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0d, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69, 0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6c, 0x69,
	0x62, 0x72, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x32,
	0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x63, 0x69,
	0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6c, 0x69, 0x62,
	0x72, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_colibri_v1_colibri_proto_rawDescOnce sync.Once
	file_proto_colibri_v1_colibri_proto_rawDescData = file_proto_colibri_v1_colibri_proto_rawDesc
)

func file_proto_colibri_v1_colibri_proto_rawDescGZIP() []byte {
	file_proto_colibri_v1_colibri_proto_rawDescOnce.Do(func() {
		file_proto_colibri_v1_colibri_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_colibri_v1_colibri_proto_rawDescData)
	})
	return file_proto_colibri_v1_colibri_proto_rawDescData
}

var file_proto_colibri_v1_colibri_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_proto_colibri_v1_colibri_proto_goTypes = []interface{}{
	(*ReservationID)(nil),                             // 0: proto.colibri.v1.ReservationID
	(*PathEndProps)(nil),                              // 1: proto.colibri.v1.PathEndProps
	(*AllocationBead)(nil),                            // 2: proto.colibri.v1.AllocationBead
	(*PathStep)(nil),                                  // 3: proto.colibri.v1.PathStep
	(*Authenticators)(nil),                            // 4: proto.colibri.v1.Authenticators
	(*Request)(nil),                                   // 5: proto.colibri.v1.Request
	(*Response)(nil),                                  // 6: proto.colibri.v1.Response
	(*SegmentSetupRequest)(nil),                       // 7: proto.colibri.v1.SegmentSetupRequest
	(*SegmentSetupResponse)(nil),                      // 8: proto.colibri.v1.SegmentSetupResponse
	(*ConfirmSegmentIndexRequest)(nil),                // 9: proto.colibri.v1.ConfirmSegmentIndexRequest
	(*ConfirmSegmentIndexResponse)(nil),               // 10: proto.colibri.v1.ConfirmSegmentIndexResponse
	(*ActivateSegmentIndexRequest)(nil),               // 11: proto.colibri.v1.ActivateSegmentIndexRequest
	(*ActivateSegmentIndexResponse)(nil),              // 12: proto.colibri.v1.ActivateSegmentIndexResponse
	(*TeardownSegmentRequest)(nil),                    // 13: proto.colibri.v1.TeardownSegmentRequest
	(*TeardownSegmentResponse)(nil),                   // 14: proto.colibri.v1.TeardownSegmentResponse
	(*CleanupSegmentIndexRequest)(nil),                // 15: proto.colibri.v1.CleanupSegmentIndexRequest
	(*CleanupSegmentIndexResponse)(nil),               // 16: proto.colibri.v1.CleanupSegmentIndexResponse
	(*ListReservationsRequest)(nil),                   // 17: proto.colibri.v1.ListReservationsRequest
	(*ListReservationsResponse)(nil),                  // 18: proto.colibri.v1.ListReservationsResponse
	(*E2ERequest)(nil),                                // 19: proto.colibri.v1.E2ERequest
	(*E2ESetupRequest)(nil),                           // 20: proto.colibri.v1.E2ESetupRequest
	(*E2ESetupResponse)(nil),                          // 21: proto.colibri.v1.E2ESetupResponse
	(*CleanupE2EIndexRequest)(nil),                    // 22: proto.colibri.v1.CleanupE2EIndexRequest
	(*CleanupE2EIndexResponse)(nil),                   // 23: proto.colibri.v1.CleanupE2EIndexResponse
	(*ListStitchablesRequest)(nil),                    // 24: proto.colibri.v1.ListStitchablesRequest
	(*ListStitchablesResponse)(nil),                   // 25: proto.colibri.v1.ListStitchablesResponse
	(*SetupReservationRequest)(nil),                   // 26: proto.colibri.v1.SetupReservationRequest
	(*SetupReservationResponse)(nil),                  // 27: proto.colibri.v1.SetupReservationResponse
	(*CleanupReservationRequest)(nil),                 // 28: proto.colibri.v1.CleanupReservationRequest
	(*CleanupReservationResponse)(nil),                // 29: proto.colibri.v1.CleanupReservationResponse
	(*AddAdmissionEntryRequest)(nil),                  // 30: proto.colibri.v1.AddAdmissionEntryRequest
	(*AddAdmissionEntryResponse)(nil),                 // 31: proto.colibri.v1.AddAdmissionEntryResponse
	(*ActiveIndicesRequest)(nil),                      // 32: proto.colibri.v1.ActiveIndicesRequest
	(*ActiveIndicesResponse)(nil),                     // 33: proto.colibri.v1.ActiveIndicesResponse
	(*Response_Success)(nil),                          // 34: proto.colibri.v1.Response.Success
	(*Response_Failure)(nil),                          // 35: proto.colibri.v1.Response.Failure
	(*SegmentSetupRequest_Params)(nil),                // 36: proto.colibri.v1.SegmentSetupRequest.Params
	(*SegmentSetupResponse_Failure)(nil),              // 37: proto.colibri.v1.SegmentSetupResponse.Failure
	(*ListReservationsResponse_ReservationLooks)(nil), // 38: proto.colibri.v1.ListReservationsResponse.ReservationLooks
	(*E2ESetupRequest_PathParams)(nil),                // 39: proto.colibri.v1.E2ESetupRequest.PathParams
	(*E2ESetupRequest_E2ESetupBead)(nil),              // 40: proto.colibri.v1.E2ESetupRequest.E2ESetupBead
	(*E2ESetupResponse_Failure)(nil),                  // 41: proto.colibri.v1.E2ESetupResponse.Failure
	(*SetupReservationResponse_Failure)(nil),          // 42: proto.colibri.v1.SetupReservationResponse.Failure
	(*SetupReservationResponse_Success)(nil),          // 43: proto.colibri.v1.SetupReservationResponse.Success
	(*CleanupReservationResponse_Failure)(nil),        // 44: proto.colibri.v1.CleanupReservationResponse.Failure
	(*ActiveIndicesResponse_Reservation)(nil),         // 45: proto.colibri.v1.ActiveIndicesResponse.Reservation
	(*ActiveIndicesResponse_ReservationIndex)(nil),    // 46: proto.colibri.v1.ActiveIndicesResponse.ReservationIndex
}
var file_proto_colibri_v1_colibri_proto_depIdxs = []int32{
	0,  // 0: proto.colibri.v1.Request.id:type_name -> proto.colibri.v1.ReservationID
	4,  // 1: proto.colibri.v1.Request.authenticators:type_name -> proto.colibri.v1.Authenticators
	34, // 2: proto.colibri.v1.Response.success:type_name -> proto.colibri.v1.Response.Success
	35, // 3: proto.colibri.v1.Response.failure:type_name -> proto.colibri.v1.Response.Failure
	4,  // 4: proto.colibri.v1.Response.authenticators:type_name -> proto.colibri.v1.Authenticators
	5,  // 5: proto.colibri.v1.SegmentSetupRequest.base:type_name -> proto.colibri.v1.Request
	36, // 6: proto.colibri.v1.SegmentSetupRequest.params:type_name -> proto.colibri.v1.SegmentSetupRequest.Params
	37, // 7: proto.colibri.v1.SegmentSetupResponse.failure:type_name -> proto.colibri.v1.SegmentSetupResponse.Failure
	4,  // 8: proto.colibri.v1.SegmentSetupResponse.authenticators:type_name -> proto.colibri.v1.Authenticators
	5,  // 9: proto.colibri.v1.ConfirmSegmentIndexRequest.base:type_name -> proto.colibri.v1.Request
	6,  // 10: proto.colibri.v1.ConfirmSegmentIndexResponse.base:type_name -> proto.colibri.v1.Response
	5,  // 11: proto.colibri.v1.ActivateSegmentIndexRequest.base:type_name -> proto.colibri.v1.Request
	6,  // 12: proto.colibri.v1.ActivateSegmentIndexResponse.base:type_name -> proto.colibri.v1.Response
	5,  // 13: proto.colibri.v1.TeardownSegmentRequest.base:type_name -> proto.colibri.v1.Request
	6,  // 14: proto.colibri.v1.TeardownSegmentResponse.base:type_name -> proto.colibri.v1.Response
	5,  // 15: proto.colibri.v1.CleanupSegmentIndexRequest.base:type_name -> proto.colibri.v1.Request
	6,  // 16: proto.colibri.v1.CleanupSegmentIndexResponse.base:type_name -> proto.colibri.v1.Response
	4,  // 17: proto.colibri.v1.ListReservationsRequest.authenticators:type_name -> proto.colibri.v1.Authenticators
	38, // 18: proto.colibri.v1.ListReservationsResponse.reservations:type_name -> proto.colibri.v1.ListReservationsResponse.ReservationLooks
	4,  // 19: proto.colibri.v1.ListReservationsResponse.authenticators:type_name -> proto.colibri.v1.Authenticators
	5,  // 20: proto.colibri.v1.E2ERequest.base:type_name -> proto.colibri.v1.Request
	19, // 21: proto.colibri.v1.E2ESetupRequest.base:type_name -> proto.colibri.v1.E2ERequest
	39, // 22: proto.colibri.v1.E2ESetupRequest.params:type_name -> proto.colibri.v1.E2ESetupRequest.PathParams
	40, // 23: proto.colibri.v1.E2ESetupRequest.allocationtrail:type_name -> proto.colibri.v1.E2ESetupRequest.E2ESetupBead
	41, // 24: proto.colibri.v1.E2ESetupResponse.failure:type_name -> proto.colibri.v1.E2ESetupResponse.Failure
	4,  // 25: proto.colibri.v1.E2ESetupResponse.authenticators:type_name -> proto.colibri.v1.Authenticators
	19, // 26: proto.colibri.v1.CleanupE2EIndexRequest.base:type_name -> proto.colibri.v1.E2ERequest
	6,  // 27: proto.colibri.v1.CleanupE2EIndexResponse.base:type_name -> proto.colibri.v1.Response
	38, // 28: proto.colibri.v1.ListStitchablesResponse.up:type_name -> proto.colibri.v1.ListReservationsResponse.ReservationLooks
	38, // 29: proto.colibri.v1.ListStitchablesResponse.core:type_name -> proto.colibri.v1.ListReservationsResponse.ReservationLooks
	38, // 30: proto.colibri.v1.ListStitchablesResponse.down:type_name -> proto.colibri.v1.ListReservationsResponse.ReservationLooks
	0,  // 31: proto.colibri.v1.SetupReservationRequest.id:type_name -> proto.colibri.v1.ReservationID
	0,  // 32: proto.colibri.v1.SetupReservationRequest.segments:type_name -> proto.colibri.v1.ReservationID
	3,  // 33: proto.colibri.v1.SetupReservationRequest.path_steps:type_name -> proto.colibri.v1.PathStep
	4,  // 34: proto.colibri.v1.SetupReservationRequest.authenticators:type_name -> proto.colibri.v1.Authenticators
	42, // 35: proto.colibri.v1.SetupReservationResponse.failure:type_name -> proto.colibri.v1.SetupReservationResponse.Failure
	43, // 36: proto.colibri.v1.SetupReservationResponse.success:type_name -> proto.colibri.v1.SetupReservationResponse.Success
	4,  // 37: proto.colibri.v1.SetupReservationResponse.authenticators:type_name -> proto.colibri.v1.Authenticators
	5,  // 38: proto.colibri.v1.CleanupReservationRequest.base:type_name -> proto.colibri.v1.Request
	3,  // 39: proto.colibri.v1.CleanupReservationRequest.steps:type_name -> proto.colibri.v1.PathStep
	44, // 40: proto.colibri.v1.CleanupReservationResponse.failure:type_name -> proto.colibri.v1.CleanupReservationResponse.Failure
	4,  // 41: proto.colibri.v1.CleanupReservationResponse.authenticators:type_name -> proto.colibri.v1.Authenticators
	45, // 42: proto.colibri.v1.ActiveIndicesResponse.reservations:type_name -> proto.colibri.v1.ActiveIndicesResponse.Reservation
	1,  // 43: proto.colibri.v1.SegmentSetupRequest.Params.props_at_start:type_name -> proto.colibri.v1.PathEndProps
	1,  // 44: proto.colibri.v1.SegmentSetupRequest.Params.props_at_end:type_name -> proto.colibri.v1.PathEndProps
	2,  // 45: proto.colibri.v1.SegmentSetupRequest.Params.allocationtrail:type_name -> proto.colibri.v1.AllocationBead
	3,  // 46: proto.colibri.v1.SegmentSetupRequest.Params.steps:type_name -> proto.colibri.v1.PathStep
	35, // 47: proto.colibri.v1.SegmentSetupResponse.Failure.failure:type_name -> proto.colibri.v1.Response.Failure
	36, // 48: proto.colibri.v1.SegmentSetupResponse.Failure.request:type_name -> proto.colibri.v1.SegmentSetupRequest.Params
	0,  // 49: proto.colibri.v1.ListReservationsResponse.ReservationLooks.id:type_name -> proto.colibri.v1.ReservationID
	3,  // 50: proto.colibri.v1.ListReservationsResponse.ReservationLooks.path_steps:type_name -> proto.colibri.v1.PathStep
	0,  // 51: proto.colibri.v1.E2ESetupRequest.PathParams.segments:type_name -> proto.colibri.v1.ReservationID
	3,  // 52: proto.colibri.v1.E2ESetupRequest.PathParams.steps:type_name -> proto.colibri.v1.PathStep
	40, // 53: proto.colibri.v1.E2ESetupResponse.Failure.allocationtrail:type_name -> proto.colibri.v1.E2ESetupRequest.E2ESetupBead
	0,  // 54: proto.colibri.v1.ActiveIndicesResponse.Reservation.id:type_name -> proto.colibri.v1.ReservationID
	46, // 55: proto.colibri.v1.ActiveIndicesResponse.Reservation.indices:type_name -> proto.colibri.v1.ActiveIndicesResponse.ReservationIndex
	7,  // 56: proto.colibri.v1.ColibriService.SegmentSetup:input_type -> proto.colibri.v1.SegmentSetupRequest
	9,  // 57: proto.colibri.v1.ColibriService.ConfirmSegmentIndex:input_type -> proto.colibri.v1.ConfirmSegmentIndexRequest
	11, // 58: proto.colibri.v1.ColibriService.ActivateSegmentIndex:input_type -> proto.colibri.v1.ActivateSegmentIndexRequest
	13, // 59: proto.colibri.v1.ColibriService.TeardownSegment:input_type -> proto.colibri.v1.TeardownSegmentRequest
	15, // 60: proto.colibri.v1.ColibriService.CleanupSegmentIndex:input_type -> proto.colibri.v1.CleanupSegmentIndexRequest
	17, // 61: proto.colibri.v1.ColibriService.ListReservations:input_type -> proto.colibri.v1.ListReservationsRequest
	20, // 62: proto.colibri.v1.ColibriService.E2ESetup:input_type -> proto.colibri.v1.E2ESetupRequest
	22, // 63: proto.colibri.v1.ColibriService.CleanupE2EIndex:input_type -> proto.colibri.v1.CleanupE2EIndexRequest
	24, // 64: proto.colibri.v1.ColibriService.ListStitchables:input_type -> proto.colibri.v1.ListStitchablesRequest
	26, // 65: proto.colibri.v1.ColibriService.SetupReservation:input_type -> proto.colibri.v1.SetupReservationRequest
	28, // 66: proto.colibri.v1.ColibriService.CleanupReservation:input_type -> proto.colibri.v1.CleanupReservationRequest
	30, // 67: proto.colibri.v1.ColibriService.AddAdmissionEntry:input_type -> proto.colibri.v1.AddAdmissionEntryRequest
	32, // 68: proto.colibri.v1.ColibriService.ActiveIndices:input_type -> proto.colibri.v1.ActiveIndicesRequest
	8,  // 69: proto.colibri.v1.ColibriService.SegmentSetup:output_type -> proto.colibri.v1.SegmentSetupResponse
	10, // 70: proto.colibri.v1.ColibriService.ConfirmSegmentIndex:output_type -> proto.colibri.v1.ConfirmSegmentIndexResponse
	12, // 71: proto.colibri.v1.ColibriService.ActivateSegmentIndex:output_type -> proto.colibri.v1.ActivateSegmentIndexResponse
	14, // 72: proto.colibri.v1.ColibriService.TeardownSegment:output_type -> proto.colibri.v1.TeardownSegmentResponse
	16, // 73: proto.colibri.v1.ColibriService.CleanupSegmentIndex:output_type -> proto.colibri.v1.CleanupSegmentIndexResponse
	18, // 74: proto.colibri.v1.ColibriService.ListReservations:output_type -> proto.colibri.v1.ListReservationsResponse
	21, // 75: proto.colibri.v1.ColibriService.E2ESetup:output_type -> proto.colibri.v1.E2ESetupResponse
	23, // 76: proto.colibri.v1.ColibriService.CleanupE2EIndex:output_type -> proto.colibri.v1.CleanupE2EIndexResponse
	25, // 77: proto.colibri.v1.ColibriService.ListStitchables:output_type -> proto.colibri.v1.ListStitchablesResponse
	27, // 78: proto.colibri.v1.ColibriService.SetupReservation:output_type -> proto.colibri.v1.SetupReservationResponse
	29, // 79: proto.colibri.v1.ColibriService.CleanupReservation:output_type -> proto.colibri.v1.CleanupReservationResponse
	31, // 80: proto.colibri.v1.ColibriService.AddAdmissionEntry:output_type -> proto.colibri.v1.AddAdmissionEntryResponse
	33, // 81: proto.colibri.v1.ColibriService.ActiveIndices:output_type -> proto.colibri.v1.ActiveIndicesResponse
	69, // [69:82] is the sub-list for method output_type
	56, // [56:69] is the sub-list for method input_type
	56, // [56:56] is the sub-list for extension type_name
	56, // [56:56] is the sub-list for extension extendee
	0,  // [0:56] is the sub-list for field type_name
}

func init() { file_proto_colibri_v1_colibri_proto_init() }
func file_proto_colibri_v1_colibri_proto_init() {
	if File_proto_colibri_v1_colibri_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_colibri_v1_colibri_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathEndProps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocationBead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Authenticators); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentSetupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentSetupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmSegmentIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmSegmentIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateSegmentIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateSegmentIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeardownSegmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeardownSegmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanupSegmentIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanupSegmentIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReservationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReservationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ERequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ESetupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ESetupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanupE2EIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanupE2EIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStitchablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStitchablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupReservationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupReservationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanupReservationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanupReservationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdmissionEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdmissionEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveIndicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveIndicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentSetupRequest_Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentSetupResponse_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReservationsResponse_ReservationLooks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ESetupRequest_PathParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ESetupRequest_E2ESetupBead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ESetupResponse_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupReservationResponse_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupReservationResponse_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanupReservationResponse_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveIndicesResponse_Reservation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_colibri_v1_colibri_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveIndicesResponse_ReservationIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_colibri_v1_colibri_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Response_Success_)(nil),
		(*Response_Failure_)(nil),
	}
	file_proto_colibri_v1_colibri_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*SegmentSetupResponse_Token)(nil),
		(*SegmentSetupResponse_Failure_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_colibri_v1_colibri_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_colibri_v1_colibri_proto_goTypes,
		DependencyIndexes: file_proto_colibri_v1_colibri_proto_depIdxs,
		MessageInfos:      file_proto_colibri_v1_colibri_proto_msgTypes,
	}.Build()
	File_proto_colibri_v1_colibri_proto = out.File
	file_proto_colibri_v1_colibri_proto_rawDesc = nil
	file_proto_colibri_v1_colibri_proto_goTypes = nil
	file_proto_colibri_v1_colibri_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ColibriServiceClient is the client API for ColibriService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ColibriServiceClient interface {
	SegmentSetup(ctx context.Context, in *SegmentSetupRequest, opts ...grpc.CallOption) (*SegmentSetupResponse, error)
	ConfirmSegmentIndex(ctx context.Context, in *ConfirmSegmentIndexRequest, opts ...grpc.CallOption) (*ConfirmSegmentIndexResponse, error)
	ActivateSegmentIndex(ctx context.Context, in *ActivateSegmentIndexRequest, opts ...grpc.CallOption) (*ActivateSegmentIndexResponse, error)
	TeardownSegment(ctx context.Context, in *TeardownSegmentRequest, opts ...grpc.CallOption) (*TeardownSegmentResponse, error)
	CleanupSegmentIndex(ctx context.Context, in *CleanupSegmentIndexRequest, opts ...grpc.CallOption) (*CleanupSegmentIndexResponse, error)
	ListReservations(ctx context.Context, in *ListReservationsRequest, opts ...grpc.CallOption) (*ListReservationsResponse, error)
	E2ESetup(ctx context.Context, in *E2ESetupRequest, opts ...grpc.CallOption) (*E2ESetupResponse, error)
	CleanupE2EIndex(ctx context.Context, in *CleanupE2EIndexRequest, opts ...grpc.CallOption) (*CleanupE2EIndexResponse, error)
	ListStitchables(ctx context.Context, in *ListStitchablesRequest, opts ...grpc.CallOption) (*ListStitchablesResponse, error)
	SetupReservation(ctx context.Context, in *SetupReservationRequest, opts ...grpc.CallOption) (*SetupReservationResponse, error)
	CleanupReservation(ctx context.Context, in *CleanupReservationRequest, opts ...grpc.CallOption) (*CleanupReservationResponse, error)
	AddAdmissionEntry(ctx context.Context, in *AddAdmissionEntryRequest, opts ...grpc.CallOption) (*AddAdmissionEntryResponse, error)
	ActiveIndices(ctx context.Context, in *ActiveIndicesRequest, opts ...grpc.CallOption) (*ActiveIndicesResponse, error)
}

type colibriServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewColibriServiceClient(cc grpc.ClientConnInterface) ColibriServiceClient {
	return &colibriServiceClient{cc}
}

func (c *colibriServiceClient) SegmentSetup(ctx context.Context, in *SegmentSetupRequest, opts ...grpc.CallOption) (*SegmentSetupResponse, error) {
	out := new(SegmentSetupResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/SegmentSetup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriServiceClient) ConfirmSegmentIndex(ctx context.Context, in *ConfirmSegmentIndexRequest, opts ...grpc.CallOption) (*ConfirmSegmentIndexResponse, error) {
	out := new(ConfirmSegmentIndexResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/ConfirmSegmentIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriServiceClient) ActivateSegmentIndex(ctx context.Context, in *ActivateSegmentIndexRequest, opts ...grpc.CallOption) (*ActivateSegmentIndexResponse, error) {
	out := new(ActivateSegmentIndexResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/ActivateSegmentIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriServiceClient) TeardownSegment(ctx context.Context, in *TeardownSegmentRequest, opts ...grpc.CallOption) (*TeardownSegmentResponse, error) {
	out := new(TeardownSegmentResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/TeardownSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriServiceClient) CleanupSegmentIndex(ctx context.Context, in *CleanupSegmentIndexRequest, opts ...grpc.CallOption) (*CleanupSegmentIndexResponse, error) {
	out := new(CleanupSegmentIndexResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/CleanupSegmentIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriServiceClient) ListReservations(ctx context.Context, in *ListReservationsRequest, opts ...grpc.CallOption) (*ListReservationsResponse, error) {
	out := new(ListReservationsResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/ListReservations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriServiceClient) E2ESetup(ctx context.Context, in *E2ESetupRequest, opts ...grpc.CallOption) (*E2ESetupResponse, error) {
	out := new(E2ESetupResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/E2ESetup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriServiceClient) CleanupE2EIndex(ctx context.Context, in *CleanupE2EIndexRequest, opts ...grpc.CallOption) (*CleanupE2EIndexResponse, error) {
	out := new(CleanupE2EIndexResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/CleanupE2EIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriServiceClient) ListStitchables(ctx context.Context, in *ListStitchablesRequest, opts ...grpc.CallOption) (*ListStitchablesResponse, error) {
	out := new(ListStitchablesResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/ListStitchables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriServiceClient) SetupReservation(ctx context.Context, in *SetupReservationRequest, opts ...grpc.CallOption) (*SetupReservationResponse, error) {
	out := new(SetupReservationResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/SetupReservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriServiceClient) CleanupReservation(ctx context.Context, in *CleanupReservationRequest, opts ...grpc.CallOption) (*CleanupReservationResponse, error) {
	out := new(CleanupReservationResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/CleanupReservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriServiceClient) AddAdmissionEntry(ctx context.Context, in *AddAdmissionEntryRequest, opts ...grpc.CallOption) (*AddAdmissionEntryResponse, error) {
	out := new(AddAdmissionEntryResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/AddAdmissionEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colibriServiceClient) ActiveIndices(ctx context.Context, in *ActiveIndicesRequest, opts ...grpc.CallOption) (*ActiveIndicesResponse, error) {
	out := new(ActiveIndicesResponse)
	err := c.cc.Invoke(ctx, "/proto.colibri.v1.ColibriService/ActiveIndices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ColibriServiceServer is the server API for ColibriService service.
type ColibriServiceServer interface {
	SegmentSetup(context.Context, *SegmentSetupRequest) (*SegmentSetupResponse, error)
	ConfirmSegmentIndex(context.Context, *ConfirmSegmentIndexRequest) (*ConfirmSegmentIndexResponse, error)
	ActivateSegmentIndex(context.Context, *ActivateSegmentIndexRequest) (*ActivateSegmentIndexResponse, error)
	TeardownSegment(context.Context, *TeardownSegmentRequest) (*TeardownSegmentResponse, error)
	CleanupSegmentIndex(context.Context, *CleanupSegmentIndexRequest) (*CleanupSegmentIndexResponse, error)
	ListReservations(context.Context, *ListReservationsRequest) (*ListReservationsResponse, error)
	E2ESetup(context.Context, *E2ESetupRequest) (*E2ESetupResponse, error)
	CleanupE2EIndex(context.Context, *CleanupE2EIndexRequest) (*CleanupE2EIndexResponse, error)
	ListStitchables(context.Context, *ListStitchablesRequest) (*ListStitchablesResponse, error)
	SetupReservation(context.Context, *SetupReservationRequest) (*SetupReservationResponse, error)
	CleanupReservation(context.Context, *CleanupReservationRequest) (*CleanupReservationResponse, error)
	AddAdmissionEntry(context.Context, *AddAdmissionEntryRequest) (*AddAdmissionEntryResponse, error)
	ActiveIndices(context.Context, *ActiveIndicesRequest) (*ActiveIndicesResponse, error)
}

// UnimplementedColibriServiceServer can be embedded to have forward compatible implementations.
type UnimplementedColibriServiceServer struct {
}

func (*UnimplementedColibriServiceServer) SegmentSetup(context.Context, *SegmentSetupRequest) (*SegmentSetupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SegmentSetup not implemented")
}
func (*UnimplementedColibriServiceServer) ConfirmSegmentIndex(context.Context, *ConfirmSegmentIndexRequest) (*ConfirmSegmentIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmSegmentIndex not implemented")
}
func (*UnimplementedColibriServiceServer) ActivateSegmentIndex(context.Context, *ActivateSegmentIndexRequest) (*ActivateSegmentIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateSegmentIndex not implemented")
}
func (*UnimplementedColibriServiceServer) TeardownSegment(context.Context, *TeardownSegmentRequest) (*TeardownSegmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TeardownSegment not implemented")
}
func (*UnimplementedColibriServiceServer) CleanupSegmentIndex(context.Context, *CleanupSegmentIndexRequest) (*CleanupSegmentIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanupSegmentIndex not implemented")
}
func (*UnimplementedColibriServiceServer) ListReservations(context.Context, *ListReservationsRequest) (*ListReservationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListReservations not implemented")
}
func (*UnimplementedColibriServiceServer) E2ESetup(context.Context, *E2ESetupRequest) (*E2ESetupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method E2ESetup not implemented")
}
func (*UnimplementedColibriServiceServer) CleanupE2EIndex(context.Context, *CleanupE2EIndexRequest) (*CleanupE2EIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanupE2EIndex not implemented")
}
func (*UnimplementedColibriServiceServer) ListStitchables(context.Context, *ListStitchablesRequest) (*ListStitchablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStitchables not implemented")
}
func (*UnimplementedColibriServiceServer) SetupReservation(context.Context, *SetupReservationRequest) (*SetupReservationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupReservation not implemented")
}
func (*UnimplementedColibriServiceServer) CleanupReservation(context.Context, *CleanupReservationRequest) (*CleanupReservationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanupReservation not implemented")
}
func (*UnimplementedColibriServiceServer) AddAdmissionEntry(context.Context, *AddAdmissionEntryRequest) (*AddAdmissionEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAdmissionEntry not implemented")
}
func (*UnimplementedColibriServiceServer) ActiveIndices(context.Context, *ActiveIndicesRequest) (*ActiveIndicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActiveIndices not implemented")
}

func RegisterColibriServiceServer(s *grpc.Server, srv ColibriServiceServer) {
	s.RegisterService(&_ColibriService_serviceDesc, srv)
}

func _ColibriService_SegmentSetup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentSetupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).SegmentSetup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/SegmentSetup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).SegmentSetup(ctx, req.(*SegmentSetupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColibriService_ConfirmSegmentIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmSegmentIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).ConfirmSegmentIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/ConfirmSegmentIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).ConfirmSegmentIndex(ctx, req.(*ConfirmSegmentIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColibriService_ActivateSegmentIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateSegmentIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).ActivateSegmentIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/ActivateSegmentIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).ActivateSegmentIndex(ctx, req.(*ActivateSegmentIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColibriService_TeardownSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeardownSegmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).TeardownSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/TeardownSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).TeardownSegment(ctx, req.(*TeardownSegmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColibriService_CleanupSegmentIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanupSegmentIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).CleanupSegmentIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/CleanupSegmentIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).CleanupSegmentIndex(ctx, req.(*CleanupSegmentIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColibriService_ListReservations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReservationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).ListReservations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/ListReservations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).ListReservations(ctx, req.(*ListReservationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColibriService_E2ESetup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(E2ESetupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).E2ESetup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/E2ESetup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).E2ESetup(ctx, req.(*E2ESetupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColibriService_CleanupE2EIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanupE2EIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).CleanupE2EIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/CleanupE2EIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).CleanupE2EIndex(ctx, req.(*CleanupE2EIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColibriService_ListStitchables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStitchablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).ListStitchables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/ListStitchables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).ListStitchables(ctx, req.(*ListStitchablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColibriService_SetupReservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupReservationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).SetupReservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/SetupReservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).SetupReservation(ctx, req.(*SetupReservationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColibriService_CleanupReservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanupReservationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).CleanupReservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/CleanupReservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).CleanupReservation(ctx, req.(*CleanupReservationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColibriService_AddAdmissionEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAdmissionEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).AddAdmissionEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/AddAdmissionEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).AddAdmissionEntry(ctx, req.(*AddAdmissionEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColibriService_ActiveIndices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActiveIndicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColibriServiceServer).ActiveIndices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.colibri.v1.ColibriService/ActiveIndices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColibriServiceServer).ActiveIndices(ctx, req.(*ActiveIndicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ColibriService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.colibri.v1.ColibriService",
	HandlerType: (*ColibriServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SegmentSetup",
			Handler:    _ColibriService_SegmentSetup_Handler,
		},
		{
			MethodName: "ConfirmSegmentIndex",
			Handler:    _ColibriService_ConfirmSegmentIndex_Handler,
		},
		{
			MethodName: "ActivateSegmentIndex",
			Handler:    _ColibriService_ActivateSegmentIndex_Handler,
		},
		{
			MethodName: "TeardownSegment",
			Handler:    _ColibriService_TeardownSegment_Handler,
		},
		{
			MethodName: "CleanupSegmentIndex",
			Handler:    _ColibriService_CleanupSegmentIndex_Handler,
		},
		{
			MethodName: "ListReservations",
			Handler:    _ColibriService_ListReservations_Handler,
		},
		{
			MethodName: "E2ESetup",
			Handler:    _ColibriService_E2ESetup_Handler,
		},
		{
			MethodName: "CleanupE2EIndex",
			Handler:    _ColibriService_CleanupE2EIndex_Handler,
		},
		{
			MethodName: "ListStitchables",
			Handler:    _ColibriService_ListStitchables_Handler,
		},
		{
			MethodName: "SetupReservation",
			Handler:    _ColibriService_SetupReservation_Handler,
		},
		{
			MethodName: "CleanupReservation",
			Handler:    _ColibriService_CleanupReservation_Handler,
		},
		{
			MethodName: "AddAdmissionEntry",
			Handler:    _ColibriService_AddAdmissionEntry_Handler,
		},
		{
			MethodName: "ActiveIndices",
			Handler:    _ColibriService_ActiveIndices_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/colibri/v1/colibri.proto",
}
